name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [ published ]
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test
      - name: Build
        run: cargo build
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - mipsel-unknown-linux-musl
        app-name:
          - ssl-demux
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.target }}
      - name: Install cross
        run: cargo install cross
      - name: Build
        run: |
          cross build --target=${{ matrix.target }} --release
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.app-name }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.app-name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Upload release asset
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          for i in ssl-demux-*; do
            tar zcfv $i.tar.gz $i
          done
          gh release upload ${{ github.ref_name }} ssl-demux-*.tar.gz

    
