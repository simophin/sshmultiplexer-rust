name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test
      - name: Build
        run: cargo build
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: test
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - mipsel-unknown-linux-musl
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Install cross
      run: cargo install cross
    - name: Build
      run: cross build --release
    - name: Release
      uses: fnkr/github-action-ghr@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GHR_REPLACE: true
        GHR_PATH: target/${{ matrix.target }}/release/sshmultiplexer-rust
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
